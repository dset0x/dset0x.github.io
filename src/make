#!/usr/bin/env zsh

esc() {
    perl -e 'use HTML::Entities; print encode_entities($ARGV[0]);' "$1"
}

domain='https://dset0x.github.io'

# INDEX
echo > index.tmp

# SITEMAP
cat <<EOF > ../sitemap.xml
<?xml version="1.0" encoding="UTF-8"?>
<urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">
    <url>
        <loc>$domain</loc>
        <lastmod>$(date +%F)</lastmod>
        <changefreq>daily</changefreq>
        <priority>0.5</priority>
    </url>
EOF

# FEED
cat <<EOF > ../feed.xml
<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
xmlns:content="http://purl.org/rss/1.0/modules/content/"
xmlns:wfw="http://wellformedweb.org/CommentAPI/"
xmlns:dc="http://purl.org/dc/elements/1.1/"
xmlns:atom="http://www.w3.org/2005/Atom"
xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
>
<channel>
  <title>When software gets in the way</title>
  <link>$domain</link>
  <description>A collection of workarounds and patches that I've written to deal with all sorts of software and life problems.</description>
	<atom:link href="$domain/feed.xml" rel="self" type="application/rss+xml" />
    <lastBuildDate>$(date -R)</lastBuildDate>
	<language>en</language>
	<sy:updatePeriod>daily</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
EOF

for j in $( ls -t *.txt ); do
    [[ "$j" == index.txt ]] && continue
    i="${j%.*}"

    title=$(esc "$(head -n2 "$i".txt | tail -n1)")
    keys=$(esc "$(head -n1 "$i".txt)")
    preview=$(esc "$(tail -n +4 $i.txt | grep '^\S' | paste -sd " " - | sed 's/<URL:.*:\(.*\)>/\1/g' | cut -d' ' -f 1-70)")

    # ARTICLE
    ./header.sh "article" "$title - When software gets in the way" "$preview" "$keys" > ../"$i".html
    echo '<article>' >> ../"$i".html
    txt2html --extract --prebegin 1 --prewhite 4 --titlefirst --underline_delimiter '' --bold_delimiter '' --italic_delimiter '' --links_dictionaries dict.dict =(tail -n +2 "$i".txt) >> ../"$i".html
    echo '</article>' >> ../"$i".html
    cat footer.html >> ../"$i".html


    # INDEX
    echo -e "<article><h2><a href=\"/$i.html\">$title</a></h2> <div class=\"preview\">$preview...</div></article>" >> index.tmp

    # SITEMAP
    cat <<EOF >> ../sitemap.xml
    <url>
        <loc>$domain/$i.html</loc>
        <lastmod>$(stat -c %y "$i.txt" | cut -d' ' -f1)</lastmod>
        <changefreq>monthly</changefreq>
        <priority>0.7</priority>
    </url>
EOF

    # FEED
    cat <<EOF >> ../feed.xml
  <item>
    <title>$title</title>
    <link>$domain/$i.html</link>
    <description>$preview</description>
    <pubDate>$(date -R --date="$(stat -c %y "$i.txt")")</pubDate>
  </item>
EOF

done

# INDEX
./header.sh "home" "When software gets in the way" "A collection of workarounds and patches that I've written to deal with all sorts of software and life problems." "hacks,patches,perl,python,linux,terminal,blog" > ../index.html
txt2html --extract --prebegin 1 --prewhite 4 --titlefirst --underline_delimiter '' --bold_delimiter '' --italic_delimiter '' --short_line_length 80 --links_dictionaries dict.dict --append_file index.tmp index.txt >> ../index.html
cat footer.html >> ../index.html
rm index.tmp

# SITEMAP
echo '</urlset>' >> ../sitemap.xml

# FEED
echo '</channel></rss>' >> ../feed.xml
